{
  "name": "All Campaigns Auto Callback 5 Days",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -320,
        3872
      ],
      "id": "550b80bd-5f33-402f-96fe-20b485e33eaa",
      "name": "Cron Trigger"
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        224
      ],
      "id": "9cc5daca-1061-4d33-b0f6-4263b9461b6f",
      "name": "Filter Retry Rules",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        224
      ],
      "id": "bffe236d-8949-4445-a830-680de94fcc4a",
      "name": "Check Timezone Window",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"629f27da-0675-46e7-8f0d-a3f0e53f180f\",\n  \"customer\": {\n    \"number\": \"+1{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        224
      ],
      "id": "e53e78ad-e09e-4b79-b83c-23ea86929d2c",
      "name": "Vapi Call",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1037278972,
          "mode": "list",
          "cachedResultName": "Real Estate Leads Un-Answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1037278972"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads Real Estate Leads').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        224
      ],
      "id": "a981b509-e582-4eca-a971-9c72c5d1266c",
      "name": "Update Lead",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        240,
        3872
      ],
      "id": "b418d0a7-73df-429d-85b6-b89fa3976a7e",
      "name": "Filter",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        3872
      ],
      "id": "668791be-cba9-4867-8b74-86f0135c244b",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        688,
        3872
      ],
      "id": "9a8354d3-7e55-4f20-b654-e01925e3bbad",
      "name": "Loop Over Items",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"629f27da-0675-46e7-8f0d-a3f0e53f180f\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        3888
      ],
      "id": "36d55a81-4284-492c-a7ab-7c49a343b382",
      "name": "Vapi Call2",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1200,
        3888
      ],
      "id": "78af474c-17df-4998-8d72-e18a1d20c457",
      "name": "Wait",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -320,
        224
      ],
      "id": "63f9d0cd-d884-4a31-af49-fb66f222b403",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        464
      ],
      "id": "809dede2-09cc-47a4-b2cf-b983343c414e",
      "name": "Filter Retry Rules1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        464
      ],
      "id": "9b754db2-0ab0-429f-b9ef-c2546ac09a39",
      "name": "Check Timezone Window1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"e51ebb8e-7490-4640-b6e4-4bf4e1eb45d3\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        464
      ],
      "id": "e715aba3-0f8c-4524-a78b-ca95ed836d53",
      "name": "Vapi Call3",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 471217447,
          "mode": "list",
          "cachedResultName": "Al Bateen",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=471217447"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads Al Bateen').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        464
      ],
      "id": "7b316d36-e331-4ce4-9526-6bd8ed141def",
      "name": "Update Lead1",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        240,
        4128
      ],
      "id": "e54af79d-40a8-45c3-be27-1dda025acd70",
      "name": "Filter1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        4128
      ],
      "id": "65763fda-6401-411d-a59d-aa0858dd5fe9",
      "name": "Code1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        688,
        4128
      ],
      "id": "fc6346a0-82ea-4d04-ad16-d14726dab0e9",
      "name": "Loop Over Items1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"e51ebb8e-7490-4640-b6e4-4bf4e1eb45d3\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        4144
      ],
      "id": "7e884bb8-d08a-4c91-adde-fbff10f9a00e",
      "name": "Vapi Call5",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1200,
        4144
      ],
      "id": "f5203121-4de7-4af9-bbe6-5794c95439fa",
      "name": "Wait1",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "629f27da-0675-46e7-8f0d-a3f0e53f180f"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        3872
      ],
      "id": "1ae53fc1-6e94-4eb1-8382-ecf2ed9c60a4",
      "name": "Vapi Call Real Estate Leads",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "e51ebb8e-7490-4640-b6e4-4bf4e1eb45d3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        4128
      ],
      "id": "fc092630-5352-44d7-876f-df25b27b6538",
      "name": "Vapi Call Al Bateen",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1037278972,
          "mode": "list",
          "cachedResultName": "Real Estate Leads Un-Answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1037278972"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        224
      ],
      "id": "7a219964-54d6-41f2-86ed-5bc8cfb72ab6",
      "name": " Read Leads Real Estate Leads",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 471217447,
          "mode": "list",
          "cachedResultName": "Al Bateen",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=471217447"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        464
      ],
      "id": "583c85a7-395a-4e70-ab91-6f5bd936277f",
      "name": " Read Leads Al Bateen",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        752
      ],
      "id": "0c4f1960-f972-4af8-a0b7-45ba4ffd873a",
      "name": "Filter Retry Rules2",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        752
      ],
      "id": "9ddfa8b1-de1a-48a9-8369-0bc47c4cf25c",
      "name": "Check Timezone Window2",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"01e25b74-bc4f-4a0c-9002-b48b8fc69fed\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        752
      ],
      "id": "e794431c-84cc-4327-8003-8e77c07970a6",
      "name": "Vapi Call4",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1640603133,
          "mode": "list",
          "cachedResultName": "St Regis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1640603133"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads St Regis').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        752
      ],
      "id": "ed7d0489-b20c-4000-9f8f-c32d599b2e77",
      "name": "Update Lead2",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1640603133,
          "mode": "list",
          "cachedResultName": "St Regis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1640603133"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        752
      ],
      "id": "37958ae5-b5dd-4359-bd33-525ccd51e2b3",
      "name": " Read Leads St Regis",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        240,
        4400
      ],
      "id": "09624114-ab43-4041-aa90-5f9d02624dfd",
      "name": "Filter2",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        4400
      ],
      "id": "841b4b1d-59aa-4362-ada3-5efce4fc7786",
      "name": "Code2",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        688,
        4400
      ],
      "id": "1e71db80-d284-44de-a01c-ef02b227434a",
      "name": "Loop Over Items2",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"01e25b74-bc4f-4a0c-9002-b48b8fc69fed\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        4432
      ],
      "id": "ae37871b-fa16-47d1-8b75-18a751d9a6e1",
      "name": "Vapi Call6",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1200,
        4432
      ],
      "id": "b02b022f-bad2-4aba-aaaf-fa341efb6edd",
      "name": "Wait2",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        992
      ],
      "id": "ddc2ebc3-8d1d-4613-9843-f63f7f1aab27",
      "name": "Filter Retry Rules3",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        992
      ],
      "id": "a318be51-9561-417d-aa69-c644b2cfab3d",
      "name": "Check Timezone Window3",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"2c7f1b07-555a-4fa1-a8b6-a7a82c874a0d\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        992
      ],
      "id": "b656c0f0-deb3-4300-8d26-f0176afbf99e",
      "name": "Vapi Call7",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 288791982,
          "mode": "list",
          "cachedResultName": "Address JBR Un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=288791982"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads Address JBR').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        992
      ],
      "id": "d8ef281b-b581-47e8-b2d3-b506354e6850",
      "name": "Update Lead3",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 288791982,
          "mode": "list",
          "cachedResultName": "Address JBR Un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=288791982"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        992
      ],
      "id": "f40c90d7-6294-4c28-8db9-fedf89ea9a8c",
      "name": " Read Leads Address JBR",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        224,
        4704
      ],
      "id": "e3539692-9f76-4937-954f-31305d0156c1",
      "name": "Filter3",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        4704
      ],
      "id": "22100f64-0773-47a9-998f-cf7e1ed54142",
      "name": "Code3",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        4704
      ],
      "id": "23a41242-d6fb-4760-a887-fe85e581fb29",
      "name": "Loop Over Items3",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"2c7f1b07-555a-4fa1-a8b6-a7a82c874a0d\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        4720
      ],
      "id": "3d461814-6563-4618-846c-11aa5ad8629e",
      "name": "Vapi Call8",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        4720
      ],
      "id": "d69c5c6e-ba26-4847-a5e8-8eb1469c7c91",
      "name": "Wait3",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "01e25b74-bc4f-4a0c-9002-b48b8fc69fed"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        32,
        4400
      ],
      "id": "d4574dc0-1d96-4ff0-9e3d-d660a7543f8f",
      "name": "Vapi Call St Regis",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "2c7f1b07-555a-4fa1-a8b6-a7a82c874a0d"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        4704
      ],
      "id": "ea45ed0c-ba72-48ca-b039-0181928addf6",
      "name": "Vapi Call Address JBR",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        1248
      ],
      "id": "1a74cd1e-1355-47a3-ac75-fb457e0d4898",
      "name": "Filter Retry Rules4",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        1248
      ],
      "id": "84e774e8-afa7-4bc5-ab54-c5a34b6970a7",
      "name": "Check Timezone Window4",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"79f872ae-dfe5-4036-9eb3-7465fbe60a89\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        1248
      ],
      "id": "f613b6b1-cae6-4afc-bbbf-a1cd2d26e1d3",
      "name": "Vapi Call9",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1799132855,
          "mode": "list",
          "cachedResultName": "Jetski Leads Un-Answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1799132855"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads Jetski Rental').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        1248
      ],
      "id": "fa44a53c-27bf-4e4a-aa33-73de20941fb9",
      "name": "Update Lead4",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        1504
      ],
      "id": "ed9f0680-ef74-4bb8-a90d-95b6308d6efb",
      "name": "Filter Retry Rules5",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        1504
      ],
      "id": "094c6f7f-ff28-4a4e-988d-5a1df894a672",
      "name": "Check Timezone Window5",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"0b40c3c4-0157-4115-8561-45a5b78fc2e9\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        1504
      ],
      "id": "6a86bfc5-53eb-4ca6-bbb8-42565872db90",
      "name": "Vapi Call10",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 729596869,
          "mode": "list",
          "cachedResultName": "Paying Cards un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=729596869"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads Playing Cards').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        1504
      ],
      "id": "29b9dada-f5b2-45c0-b5ad-eee776b63512",
      "name": "Update Lead5",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        224,
        5024
      ],
      "id": "c111725a-24a8-4070-a8f7-fbcbf48cd791",
      "name": "Filter4",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        5024
      ],
      "id": "f2a52378-39d7-478a-a670-54513f4ab250",
      "name": "Code4",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        5024
      ],
      "id": "228cc522-a99c-49e5-b0bb-9bf95fd442b7",
      "name": "Loop Over Items4",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"79f872ae-dfe5-4036-9eb3-7465fbe60a89\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        5040
      ],
      "id": "8824bb2e-b6d1-4046-8c62-2b41c529cd79",
      "name": "Vapi Call11",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        5040
      ],
      "id": "7edbd3bb-6282-4bfb-9e9d-bf9d155365e0",
      "name": "Wait4",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        224,
        5360
      ],
      "id": "5cec45c0-8dea-42ae-a80a-34a79a2fdab3",
      "name": "Filter5",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        5360
      ],
      "id": "25c9c07e-20e9-43fb-9f12-d37c0e724c72",
      "name": "Code5",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        5360
      ],
      "id": "0b869f72-5c99-46f9-bd70-d88d4eb08fe9",
      "name": "Loop Over Items5",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"0b40c3c4-0157-4115-8561-45a5b78fc2e9\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        5392
      ],
      "id": "3447fd00-2420-488c-b461-fbc9ca5be0c8",
      "name": "Vapi Call12",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        5392
      ],
      "id": "a3cb3c8d-997d-4fa3-9aef-8d7ee6a781cd",
      "name": "Wait5",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        208,
        5712
      ],
      "id": "9714c755-1adc-4781-9a88-4f6d643a7797",
      "name": "Filter6"
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        5712
      ],
      "id": "52a3b17e-7465-4c55-ae0c-bffafd23d4f6",
      "name": "Code6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        5712
      ],
      "id": "69dfa5a0-1296-4a67-888b-7273c1cf86f9",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"f67892f4-9e4e-41a8-b1fe-c5c9fc9b9a33\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        5728
      ],
      "id": "9b9c66e2-8140-4048-b290-1f5e1fcecd9b",
      "name": "Vapi Call13",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        5728
      ],
      "id": "22e616b8-a112-4099-8d48-254b56f83dc1",
      "name": "Wait6",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99"
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        1744
      ],
      "id": "e790a651-7fc0-4ffb-8832-e7bd99970fac",
      "name": "Filter Retry Rules6"
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        1744
      ],
      "id": "7440f139-6849-4e33-9cb3-81486fb37890",
      "name": "Check Timezone Window6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"f67892f4-9e4e-41a8-b1fe-c5c9fc9b9a33\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        1744
      ],
      "id": "0d03eb85-ef7b-4bd2-87b9-f68fe4c9c20c",
      "name": "Vapi Call14",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1365428571,
          "mode": "list",
          "cachedResultName": "AM Leads un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1365428571"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads AM Leads ').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        1744
      ],
      "id": "e3992662-3f06-4dfe-a2f4-2bb8047ba2d9",
      "name": "Update Lead6"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1799132855,
          "mode": "list",
          "cachedResultName": "Jetski Leads Un-Answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1799132855"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        1248
      ],
      "id": "b983572b-bf4b-4ab1-9002-bca8a57288f2",
      "name": " Read Leads Jetski Rental",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 729596869,
          "mode": "list",
          "cachedResultName": "Paying Cards un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=729596869"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        1504
      ],
      "id": "7e7dbe5c-085b-4326-9069-7a8a3a81b06d",
      "name": " Read Leads Playing Cards",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2000
      ],
      "id": "40af36a5-9536-4661-a545-84f2eaec8fbd",
      "name": "Filter Retry Rules7",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        2000
      ],
      "id": "7baebde4-e149-4cf5-9181-d9875556e335",
      "name": "Check Timezone Window7",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"fa637caf-dfc4-403f-bf88-b98325e860b5\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        2000
      ],
      "id": "e971df54-1cd7-479b-b5c9-401685658d1b",
      "name": "Vapi Call15",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1480402375,
          "mode": "list",
          "cachedResultName": "AI Leads un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1480402375"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $(' Read Leads AI Leads ').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        2000
      ],
      "id": "b3fb3636-0ca0-4bb5-a61d-abaaa639d0e5",
      "name": "Update Lead7",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "79f872ae-dfe5-4036-9eb3-7465fbe60a89"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        5024
      ],
      "id": "2a2feb03-ab46-4a7c-8654-eab631925dce",
      "name": "Vapi Call Jetski Rental",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "0b40c3c4-0157-4115-8561-45a5b78fc2e9"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        5360
      ],
      "id": "7aadc402-b962-4f27-bc6e-b87bac96b4ae",
      "name": "Vapi Call Paying Cards",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1365428571,
          "mode": "list",
          "cachedResultName": "AM Leads un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1365428571"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        1744
      ],
      "id": "41b12d90-55e0-4358-a4c7-4ea6ea472899",
      "name": " Read Leads AM Leads "
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "f67892f4-9e4e-41a8-b1fe-c5c9fc9b9a33"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        5712
      ],
      "id": "2fc0bc0c-5f38-4ee8-b442-774ed1c4dc2d",
      "name": "Vapi Call AM Leads"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1480402375,
          "mode": "list",
          "cachedResultName": "AI Leads un-answered",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1480402375"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        2000
      ],
      "id": "27eda2ec-7351-4162-a0e3-1b2175c7115b",
      "name": " Read Leads AI Leads ",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        208,
        6032
      ],
      "id": "6072ca78-48c1-4b1e-865f-3fdead2348c3",
      "name": "Filter7",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        6032
      ],
      "id": "b2b3defd-e6fb-4a59-a70e-ed602711f84c",
      "name": "Code7",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        6032
      ],
      "id": "f1f2a400-8eb4-45ab-a6da-8f4696a97f90",
      "name": "Loop Over Items7",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"fa637caf-dfc4-403f-bf88-b98325e860b5\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        6048
      ],
      "id": "9fb5970e-4654-4851-8d02-c47a04ef87ee",
      "name": "Vapi Call16",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        6048
      ],
      "id": "68f7b00b-0cd6-4fbf-b76b-f1aba14a6bdc",
      "name": "Wait7",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "fa637caf-dfc4-403f-bf88-b98325e860b5"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        6032
      ],
      "id": "65bbc919-92f2-4819-8fdd-3d6e7bf5ea5e",
      "name": "Vapi Call AI Leads",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const original = item.json.phone || \"\";\n  const cleaned = original.replace(/\\s+/g, \"\"); // remove all spaces\n  item.json.PhoneFormatted = `'${cleaned.startsWith(\"+\") ? cleaned : \"+\" + cleaned}`; // add single quote at start\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        7328
      ],
      "id": "7723f5b5-ae07-4a75-b6ba-78f1d6634583",
      "name": "Format Phone1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030486577,
          "mode": "list",
          "cachedResultName": "Jetski Scraping",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=2030486577"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.name }}",
            "phone": "={{ $json.phone }}",
            "PhoneFormatted": "={{ $json.PhoneFormatted }}",
            "address": "={{ $json.address }}",
            "link": "={{ $json.link }}",
            "location": "={{ $json.location }}"
          },
          "matchingColumns": [
            "PhoneFormatted"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PhoneFormatted",
              "displayName": "PhoneFormatted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1024,
        7328
      ],
      "id": "943f1262-7a99-4bea-bd5b-1592cfbdf964",
      "name": "Save to Google Sheet1",
      "disabled": true
    },
    {
      "parameters": {
        "url": "=https://serpapi.com/search.json?q={{$json[\"keyword\"]}}&engine=google_maps&type=search&api_key=99bf2d165fe1ab5f650d3fbda681ab0c431dae9a103808c7195a1b52fbf181a6",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        7328
      ],
      "id": "a21caed6-e7b6-46fe-ab70-1f519042a6c9",
      "name": "Search Google Maps (SerpAPI)1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return $input.all().flatMap(item => {\n  const results = item.json.local_results || [];\n  return results\n    .filter(r => r.phone && r.phone.trim() !== '') // Exclude items with empty or whitespace-only phone\n    .map(r => ({\n      json: {\n        name: r.title,\n        phone: r.phone || '',\n        address: r.address || '',\n        link: r.website || '',\n        location: r.gps_coordinates ? `${r.gps_coordinates.latitude}, ${r.gps_coordinates.longitude}` : '',\n        keyword: item.json.keyword\n      }\n    }));\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        7328
      ],
      "id": "5f46696c-5fff-42c6-b1c4-d48e3ae2b8df",
      "name": "Extract Results1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        144,
        7328
      ],
      "id": "2b73e6d3-155a-453f-9bb9-0c42fd3bec24",
      "name": "Loop Over Items8",
      "disabled": true
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1248,
        7328
      ],
      "id": "2a86e407-c475-4668-80cd-d34c667dba4d",
      "name": "Wait8",
      "webhookId": "863471ff-2b1c-45ad-b9eb-a633070a3dd5",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Berlin';\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        0
      ],
      "id": "2fcddb7a-da57-4b1a-8c78-3d46a21a6da3",
      "name": "Check Timezone Window8",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"79f872ae-dfe5-4036-9eb3-7465fbe60a89\",\n  \"customer\": {\n    \"number\": \"+1{{ $('Jetski Scraping').item.json.PhoneFormatted }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        464,
        0
      ],
      "id": "9cb7faf5-d71d-41cd-b680-ee470be7d3d5",
      "name": "Vapi Call1",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030486577,
          "mode": "list",
          "cachedResultName": "Jetski Scraping",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=2030486577"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "done",
            "PhoneFormatted": "={{ $('Jetski Scraping').item.json.Phone }}"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PhoneFormatted",
              "displayName": "PhoneFormatted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        704,
        0
      ],
      "id": "06e78811-0cd3-445b-a387-f3dd46d74c13",
      "name": "Update Lead8",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2030486577,
          "mode": "list",
          "cachedResultName": "Jetski Scraping",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=2030486577"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        0
      ],
      "id": "2b1ac3c4-996a-4e2e-82a6-549bb083b87b",
      "name": "Jetski Scraping",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        224,
        3632
      ],
      "id": "08a4d761-3369-449e-bdd9-9ce088743c41",
      "name": "Filter8",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        3632
      ],
      "id": "3a1e7996-dc36-4118-99cd-6be2abb19b1f",
      "name": "Code8",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        3632
      ],
      "id": "ae37ed44-4202-4cb3-8e5d-d0bf86be728d",
      "name": "Loop Over Items9",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"79f872ae-dfe5-4036-9eb3-7465fbe60a89\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        3648
      ],
      "id": "14d3c2a1-05a1-47bf-aad9-a6cb5ab45f91",
      "name": "Vapi Call17",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        3648
      ],
      "id": "1547a064-7ebf-4cc4-a262-f1e25ff38836",
      "name": "Wait9",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -256,
        7328
      ],
      "id": "0fa83347-800a-45ab-876a-6d9dbff92a5e",
      "name": "Schedule Trigger1",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "79f872ae-dfe5-4036-9eb3-7465fbe60a89"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        3632
      ],
      "id": "3a0316ac-829d-42bf-bcb0-ef9016cccfd6",
      "name": "Vapi Call Jetski",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2272
      ],
      "id": "9d68cb5c-1255-48df-93d4-5fa69742fa31",
      "name": "Filter Retry Rules8"
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Germany'; // Germany\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  if (phone.startsWith('+40')) return 'Europe/Amsterdam'; // Romania\n  if (phone.startsWith('+86')) return 'Asia/China'; // China\n  if (phone.startsWith('+34')) return 'Europe/Spain'; // Spain\n  if (phone.startsWith('+88')) return 'Asia/Dubai'; // Bagladesh\n  if (phone.startsWith('+41')) return 'Europe/Switzerland'; // Switzerland\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 15) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        2272
      ],
      "id": "249d6fb7-72ad-4139-80dd-ca0033a2d8ed",
      "name": "Check Timezone Window9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"89ea433e-bcdb-4c2a-b0e2-56bf2f55a3f3\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        2272
      ],
      "id": "399157f6-fbb3-4fbb-a6c4-89d83b71f251",
      "name": "Vapi Call18",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1211487879,
          "mode": "list",
          "cachedResultName": "RE Companies Dubai (Google Maps)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1211487879"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $('Read Leads RE Companies Dubai (Google Maps)').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        2272
      ],
      "id": "09402403-a92c-4c97-9cfc-7eada2f14b8e",
      "name": "Update Lead9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        208,
        6352
      ],
      "id": "788bc9c9-b1d1-4087-9eb0-cda8e0bbb505",
      "name": "Filter9",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        6352
      ],
      "id": "20476c99-f5ab-4de5-b62e-67cf77c157d6",
      "name": "Code9",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        6352
      ],
      "id": "f0ac4633-f2a4-4293-b5a4-0f5cab51ed88",
      "name": "Loop Over Items10",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"89ea433e-bcdb-4c2a-b0e2-56bf2f55a3f3\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        6368
      ],
      "id": "83c6607f-24e4-42f8-aa25-171e1b94e607",
      "name": "Vapi Call19",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        6368
      ],
      "id": "5d00301e-0216-4bc0-91a9-993ce9ef584a",
      "name": "Wait10",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      keyword: \"seadoo spark trixx rental burj al arab\"\n    }\n  },\n  {\n    json: {\n      keyword: \"jumping seadoo rental near dubai islands\"\n    }\n  },\n  {\n    json: {\n      keyword: \"seadoo spark trixx sharjah rental\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        7328
      ],
      "id": "f61528b3-55ab-4b11-b55f-58fbe5cb8859",
      "name": "Set Keywords Jetski",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const original = item.json.phone || \"\";\n  const cleaned = original.replace(/\\s+/g, \"\"); // remove all spaces\n  item.json.PhoneFormatted = `'${cleaned.startsWith(\"+\") ? cleaned : \"+\" + cleaned}`; // add single quote at start\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        7600
      ],
      "id": "5ead9917-4768-4151-8de9-c4ce5cdbb764",
      "name": "Format Phone"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1455877879,
          "mode": "list",
          "cachedResultName": "Medical Clinics Scraping",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1455877879"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.name }}",
            "phone": "={{ $json.phone }}",
            "PhoneFormatted": "={{ $json.PhoneFormatted }}",
            "address": "={{ $json.address }}",
            "link": "={{ $json.link }}",
            "location": "={{ $json.location }}"
          },
          "matchingColumns": [
            "PhoneFormatted"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PhoneFormatted",
              "displayName": "PhoneFormatted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1024,
        7600
      ],
      "id": "d00b0ff5-c357-4fc7-b508-039bed809dcb",
      "name": "Save to Google Sheet"
    },
    {
      "parameters": {
        "url": "=https://serpapi.com/search.json?q={{$json[\"keyword\"]}}&engine=google_maps&type=search&api_key=99bf2d165fe1ab5f650d3fbda681ab0c431dae9a103808c7195a1b52fbf181a6",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        7600
      ],
      "id": "25b0dfae-b6d8-4aca-89a4-eae5f79e0dec",
      "name": "Search Google Maps (SerpAPI)"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().flatMap(item => {\n  const results = item.json.local_results || [];\n  return results\n    .filter(r => r.phone && r.phone.trim() !== '') // Exclude items with empty or whitespace-only phone\n    .map(r => ({\n      json: {\n        name: r.title,\n        phone: r.phone || '',\n        address: r.address || '',\n        link: r.website || '',\n        location: r.gps_coordinates ? `${r.gps_coordinates.latitude}, ${r.gps_coordinates.longitude}` : '',\n        keyword: item.json.keyword\n      }\n    }));\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        7600
      ],
      "id": "b86ea0b6-0d37-4b3e-8606-ba0041ff3c13",
      "name": "Extract Results"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        144,
        7600
      ],
      "id": "7403c178-b2a6-4709-a6a3-16a661f9893f",
      "name": "Loop Over Items11"
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1248,
        7600
      ],
      "id": "d551ef9c-5100-4cd9-a2a6-d02459cb98a4",
      "name": "Wait11",
      "webhookId": "863471ff-2b1c-45ad-b9eb-a633070a3dd5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -256,
        7600
      ],
      "id": "ed19e94c-0943-4dd2-b707-dbd123d452fc",
      "name": "Schedule Trigger2"
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2512
      ],
      "id": "e82caf6c-83b6-4289-b352-96970dfbd935",
      "name": "Filter Retry Rules9",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Germany'; // Germany\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  if (phone.startsWith('+40')) return 'Europe/Amsterdam'; // Romania\n  if (phone.startsWith('+86')) return 'Asia/China'; // China\n  if (phone.startsWith('+34')) return 'Europe/Spain'; // Spain\n  if (phone.startsWith('+41')) return 'Europe/Switzerland'; // Switzerland\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        2512
      ],
      "id": "7792b21a-14ce-4662-bc7e-3644d5bca58b",
      "name": "Check Timezone Window10",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"f73ef9de-15e2-4489-bd75-fa5df48d7103\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        2512
      ],
      "id": "a8083362-75fc-450e-9ca1-025c75b17d2a",
      "name": "Vapi Call20",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 950313762,
          "mode": "list",
          "cachedResultName": "Medical Clinics (Google Maps)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=950313762"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $('Read Leads Medical Clinics (Google Maps)').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        2512
      ],
      "id": "a68d44ce-e5bc-4cca-aa86-274bc5f5cdfd",
      "name": "Update Lead10",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        208,
        6640
      ],
      "id": "433d188a-08b4-4db9-b197-fe8a30b6b13a",
      "name": "Filter10",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        6640
      ],
      "id": "b49de1cb-01ab-4732-ab34-0cbbe834c69d",
      "name": "Code10",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        6640
      ],
      "id": "506f314a-ae84-4a51-add4-511ddc454375",
      "name": "Loop Over Items12",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"f73ef9de-15e2-4489-bd75-fa5df48d7103\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        6672
      ],
      "id": "3518dae5-4ead-4255-8bad-7cf45fb6cfbc",
      "name": "Vapi Call21",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        6672
      ],
      "id": "e457309f-7040-43d3-9b7c-52f754baabb5",
      "name": "Wait12",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53152b0d-00ae-42a6-9761-6ded6c42b369",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "voicemail",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "03953b31-3241-4bc0-a8fa-4aed72492e11",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-busy",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9ee0acb9-61d3-4095-9e80-a8662f73eda1",
              "leftValue": "={{ $json.endedReason }}",
              "rightValue": "customer-did-not-answer",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        208,
        6912
      ],
      "id": "a8cdd8a1-5a65-4d56-9deb-143c8a19c471",
      "name": "Filter11",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get yesterday's date\nconst now = new Date($now);\nconst yesterday = new Date(now);\nyesterday.setDate(yesterday.getDate() - 1);\nyesterday.setHours(0, 0, 0, 0);\n\n// Filter all items where createdAt is from yesterday\nconst filtered = items.filter(item => {\n  const createdAt = new Date(item.json.createdAt);\n  createdAt.setHours(0, 0, 0, 0);\n  return createdAt.getTime() === yesterday.getTime();\n});\n\n// Return filtered results in proper n8n format\nreturn filtered;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        6912
      ],
      "id": "1929cda4-7f92-482f-a9ef-55d161f344af",
      "name": "Code11",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        6912
      ],
      "id": "cb79d7e3-d300-4b81-b0cf-edb812d2a465",
      "name": "Loop Over Items13",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"e1fa02ae-9812-4ff8-b208-065d7ef0ba9a\",\n  \"customer\": {\n    \"number\": \"{{ $json.customer.number }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        6928
      ],
      "id": "9343f555-7e6a-4a93-a3e6-349cfd1c7ee9",
      "name": "Vapi Call22",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        6928
      ],
      "id": "63555315-e910-472d-981d-d2f78490e94e",
      "name": "Wait13",
      "webhookId": "6566b8d1-ce19-4cae-be14-70156c791c99",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const moment = require('moment');\nconst now = moment();\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  const status = (item.json.Status || '').toLowerCase();\n  const attempts = parseInt(item.json.Attempts || '0');\n\n  // Exclude leads with no phone, completed status, or too many attempts\n  if (!phone || status === 'completed' || attempts >= 30) return false;\n\n  const firstCallDate = item.json.FirstCallDate;\n  const lastCallDate = item.json.LastCallDate;\n\n  // New lead: empty FirstCallDate means it's eligible for the first call\n  if (!firstCallDate) return true;\n\n  // Parse dates (only if non-empty)\n  const first = moment(firstCallDate);\n  const last = moment(lastCallDate);\n\n  // If dates are invalid, exclude the lead (optional, depending on requirements)\n  if (!first.isValid() || !last.isValid()) return false;\n\n  const daysSinceFirst = now.diff(first, 'days');\n  const daysSinceLast = now.diff(last, 'days');\n\n  // Retry rules for existing leads\n  if (daysSinceFirst <= 7) return last.isBefore(now, 'day'); // Daily for 7 days\n  if (daysSinceFirst <= 35) return daysSinceLast >= 3;       // 2x/week\n  if (daysSinceFirst <= 180) return daysSinceLast >= 30;     // Monthly\n\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2752
      ],
      "id": "43951df8-034b-41b1-8540-c57f2a67c549",
      "name": "Filter Retry Rules10",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "function getTimeZoneFromPhone(phone) {\n  if (phone.startsWith('+971')) return 'Asia/Dubai';\n  if (phone.startsWith('+1')) return 'America/New_York';\n  if (phone.startsWith('+44')) return 'Europe/London';\n  if (phone.startsWith('+91')) return 'Asia/Kolkata';\n  if (phone.startsWith('+39')) return 'Europe/Rome';\n  if (phone.startsWith('+33')) return 'Europe/Paris';\n  if (phone.startsWith('+49')) return 'Europe/Germany'; // Germany\n  if (phone.startsWith('+7')) return 'Europe/Moscow';\n  if (phone.startsWith('+61')) return 'Australia/Sydney';\n  if (phone.startsWith('+34')) return 'Europe/Madrid';\n  if (phone.startsWith('+55')) return 'America/Sao_Paulo';\n  if (phone.startsWith('+48')) return 'Europe/Warsaw'; // Poland\n  if (phone.startsWith('+254')) return 'Africa/Nairobi'; // Kenya\n  if (phone.startsWith('+30')) return 'Europe/Athens'; // Greece\n  if (phone.startsWith('+90')) return 'Europe/Istanbul'; // Turkey\n  if (phone.startsWith('+386')) return 'Europe/Ljubljana'; // Slovenia\n  if (phone.startsWith('+356')) return 'Europe/Malta'; // Malta\n  if (phone.startsWith('+420')) return 'Europe/Prague'; // Czech Republic\n  if (phone.startsWith('+359')) return 'Europe/Sofia'; // Bulgaria\n  if (phone.startsWith('+382')) return 'Europe/Podgorica'; // Montenegro\n  if (phone.startsWith('+31')) return 'Europe/Amsterdam'; // Netherlands\n  if (phone.startsWith('+40')) return 'Europe/Amsterdam'; // Romania\n  if (phone.startsWith('+86')) return 'Asia/China'; // China\n  if (phone.startsWith('+34')) return 'Europe/Spain'; // Spain\n  if (phone.startsWith('+41')) return 'Europe/Switzerland'; // Switzerland\n  return 'UTC'; // Fallback\n}\n\nreturn items.filter(item => {\n  const phone = item.json.Phone;\n  if (!phone) return false;\n  const tz = getTimeZoneFromPhone(phone);\n  const now = $now.setZone(tz);\n  const hour = now.hour;\n\n  if ((hour >= 12 && hour < 14) || (hour >= 17 && hour < 20)) {\n    return true;\n  }\n  return false;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        2752
      ],
      "id": "28b175f7-96e2-4728-b36c-8fd6bba0cfae",
      "name": "Check Timezone Window11",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumberId\": \"22dd69ae-d16e-439a-8659-3158c466912f\",\n  \"assistantId\": \"e1fa02ae-9812-4ff8-b208-065d7ef0ba9a\",\n  \"customer\": {\n    \"number\": \"{{ $json.Phone }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        2752
      ],
      "id": "d0893e40-1ddb-4208-8dad-b97db5ffefdd",
      "name": "Vapi Call23",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1520610482,
          "mode": "list",
          "cachedResultName": "Medical Clinics (Seamless)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1520610482"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Phone": "={{ $('Read Leads Medical Clinics (Seamless)').item.json.Phone }}",
            "Status": "done"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        880,
        2752
      ],
      "id": "27dfc096-4bbe-49b3-ab73-ec92e94180f1",
      "name": "Update Lead11",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const original = item.json.phone || \"\";\n  const cleaned = original.replace(/\\s+/g, \"\"); // remove all spaces\n  item.json.PhoneFormatted = `'${cleaned.startsWith(\"+\") ? cleaned : \"+\" + cleaned}`; // add single quote at start\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        7888
      ],
      "id": "0727564c-3ff0-4ee2-bb2e-0a12592e42fd",
      "name": "Format Phone2"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1972668561,
          "mode": "list",
          "cachedResultName": "RE Companies Dubai Scraping",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1972668561"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.name }}",
            "phone": "={{ $json.phone }}",
            "PhoneFormatted": "={{ $json.PhoneFormatted }}",
            "address": "={{ $json.address }}",
            "link": "={{ $json.link }}",
            "location": "={{ $json.location }}"
          },
          "matchingColumns": [
            "PhoneFormatted"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PhoneFormatted",
              "displayName": "PhoneFormatted",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1024,
        7888
      ],
      "id": "d663f78c-029f-461d-867a-32465b13707d",
      "name": "Save to Google Sheet2"
    },
    {
      "parameters": {
        "url": "=https://serpapi.com/search.json?q={{$json[\"keyword\"]}}&engine=google_maps&type=search&api_key=99bf2d165fe1ab5f650d3fbda681ab0c431dae9a103808c7195a1b52fbf181a6",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        7888
      ],
      "id": "3954d0ed-5d68-4696-b981-d0e5baf69ede",
      "name": "Search Google Maps (SerpAPI)2"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().flatMap(item => {\n  const results = item.json.local_results || [];\n  return results\n    .filter(r => r.phone && r.phone.trim() !== '') // Exclude items with empty or whitespace-only phone\n    .map(r => ({\n      json: {\n        name: r.title,\n        phone: r.phone || '',\n        address: r.address || '',\n        link: r.website || '',\n        location: r.gps_coordinates ? `${r.gps_coordinates.latitude}, ${r.gps_coordinates.longitude}` : '',\n        keyword: item.json.keyword\n      }\n    }));\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        7888
      ],
      "id": "57572f7b-b582-40ed-80a2-d6fc5ce18cc7",
      "name": "Extract Results2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        144,
        7888
      ],
      "id": "cecf1d7d-1317-4209-8096-e4455aa84110",
      "name": "Loop Over Items14"
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1248,
        7888
      ],
      "id": "dc9fd6fa-f7e6-4238-90af-e259c0fc35a8",
      "name": "Wait14",
      "webhookId": "863471ff-2b1c-45ad-b9eb-a633070a3dd5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -256,
        7888
      ],
      "id": "0f3ff717-fe17-41ba-8417-1822385aaafc",
      "name": "Schedule Trigger3"
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "f73ef9de-15e2-4489-bd75-fa5df48d7103"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        6640
      ],
      "id": "be41d0a3-bc23-48f1-85a8-f325189bf139",
      "name": "Vapi Call Medical Clinics (Google Maps)",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "e1fa02ae-9812-4ff8-b208-065d7ef0ba9a"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        6912
      ],
      "id": "f6c67971-97b7-4cf5-8fc4-a930a14588c6",
      "name": "Vapi Call Medical Clinics (Seamless)",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://api.vapi.ai/call",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "89ea433e-bcdb-4c2a-b0e2-56bf2f55a3f3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer e6c4c1a8-d0aa-4f83-8446-7a9878065c42"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        6352
      ],
      "id": "65eab7b9-9222-45b0-8e40-6d993b2efdb0",
      "name": "Vapi Call RE Companies Dubai (Google Maps)",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 950313762,
          "mode": "list",
          "cachedResultName": "Medical Clinics (Google Maps)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=950313762"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        2512
      ],
      "id": "08c02580-5bb1-4fea-a581-47c9ccd396b2",
      "name": "Read Leads Medical Clinics (Google Maps)",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1520610482,
          "mode": "list",
          "cachedResultName": "Medical Clinics (Seamless)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1520610482"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        2752
      ],
      "id": "b6203980-0f31-4960-8f2d-faac2e3a5386",
      "name": "Read Leads Medical Clinics (Seamless)",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A",
          "mode": "list",
          "cachedResultName": "Leads Calling",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1211487879,
          "mode": "list",
          "cachedResultName": "RE Companies Dubai (Google Maps)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1If0heSCfDbKTvlmZEH7MeapLCn4jx1pQvzHJD4Hgx3A/edit#gid=1211487879"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        2272
      ],
      "id": "18f0621a-e47e-4ca4-a2f2-b2e0bd39070f",
      "name": "Read Leads RE Companies Dubai (Google Maps)"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      keyword: \"medical clinics Philadelphia\"\n    }\n  },\n  {\n    json: {\n      keyword: \"medical clinics San Antonio\"\n    }\n  },\n  {\n    json: {\n      keyword: \"medical clinics San Diego\"\n    }\n  },\n  {\n    json: {\n      keyword: \"medical clinics Dallas\"\n    }\n  }\n  \n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        7600
      ],
      "id": "d7f7c0b9-4924-44a7-94f0-7320920ac9d5",
      "name": "Set Keywords Medical Clinics (Maps)"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      keyword: \"Real Estate Companies Bur Dubai\"\n    }\n  },\n\n  {\n    json: {\n      keyword: \"Real Estate Companies Karama\"\n    }\n  },\n\n{\n    json: {\n      keyword: \"Real Estate Companies Satwa\"\n    }\n  }\n\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        7888
      ],
      "id": "c4f2e479-cff8-4d60-9b68-1bab85a13348",
      "name": "Set Keywords RE Companies Dubai (Maps)"
    }
  ],
  "pinData": {},
  "connections": {
    "Cron Trigger": {
      "main": [
        [
          {
            "node": "Vapi Call Real Estate Leads",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Al Bateen",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call St Regis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Address JBR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Jetski Rental",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Paying Cards",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call AM Leads",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call AI Leads",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Jetski",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call RE Companies Dubai (Google Maps)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Medical Clinics (Google Maps)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Vapi Call Medical Clinics (Seamless)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules": {
      "main": [
        [
          {
            "node": "Check Timezone Window",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window": {
      "main": [
        [
          {
            "node": "Vapi Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call": {
      "main": [
        [
          {
            "node": "Update Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call2": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": " Read Leads Real Estate Leads",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads Al Bateen",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads St Regis",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads Address JBR",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads Jetski Rental",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads Playing Cards",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads AM Leads ",
            "type": "main",
            "index": 0
          },
          {
            "node": " Read Leads AI Leads ",
            "type": "main",
            "index": 0
          },
          {
            "node": "Jetski Scraping",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read Leads RE Companies Dubai (Google Maps)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read Leads Medical Clinics (Google Maps)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read Leads Medical Clinics (Seamless)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules1": {
      "main": [
        [
          {
            "node": "Check Timezone Window1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window1": {
      "main": [
        [
          {
            "node": "Vapi Call3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call3": {
      "main": [
        [
          {
            "node": "Update Lead1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call5": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Real Estate Leads": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Al Bateen": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads Real Estate Leads": {
      "main": [
        [
          {
            "node": "Filter Retry Rules",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads Al Bateen": {
      "main": [
        [
          {
            "node": "Filter Retry Rules1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules2": {
      "main": [
        [
          {
            "node": "Check Timezone Window2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window2": {
      "main": [
        [
          {
            "node": "Vapi Call4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call4": {
      "main": [
        [
          {
            "node": "Update Lead2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads St Regis": {
      "main": [
        [
          {
            "node": "Filter Retry Rules2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call6": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules3": {
      "main": [
        [
          {
            "node": "Check Timezone Window3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window3": {
      "main": [
        [
          {
            "node": "Vapi Call7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call7": {
      "main": [
        [
          {
            "node": "Update Lead3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads Address JBR": {
      "main": [
        [
          {
            "node": "Filter Retry Rules3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter3": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call8": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call St Regis": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Address JBR": {
      "main": [
        [
          {
            "node": "Filter3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules4": {
      "main": [
        [
          {
            "node": "Check Timezone Window4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window4": {
      "main": [
        [
          {
            "node": "Vapi Call9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call9": {
      "main": [
        [
          {
            "node": "Update Lead4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules5": {
      "main": [
        [
          {
            "node": "Check Timezone Window5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window5": {
      "main": [
        [
          {
            "node": "Vapi Call10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call10": {
      "main": [
        [
          {
            "node": "Update Lead5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter4": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call11": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter5": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call12": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter6": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call13": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules6": {
      "main": [
        [
          {
            "node": "Check Timezone Window6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window6": {
      "main": [
        [
          {
            "node": "Vapi Call14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call14": {
      "main": [
        [
          {
            "node": "Update Lead6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads Jetski Rental": {
      "main": [
        [
          {
            "node": "Filter Retry Rules4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads Playing Cards": {
      "main": [
        [
          {
            "node": "Filter Retry Rules5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules7": {
      "main": [
        [
          {
            "node": "Check Timezone Window7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window7": {
      "main": [
        [
          {
            "node": "Vapi Call15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call15": {
      "main": [
        [
          {
            "node": "Update Lead7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Jetski Rental": {
      "main": [
        [
          {
            "node": "Filter4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Paying Cards": {
      "main": [
        [
          {
            "node": "Filter5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads AM Leads ": {
      "main": [
        [
          {
            "node": "Filter Retry Rules6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call AM Leads": {
      "main": [
        [
          {
            "node": "Filter6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    " Read Leads AI Leads ": {
      "main": [
        [
          {
            "node": "Filter Retry Rules7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter7": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Loop Over Items7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items7": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call16": {
      "main": [
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait7": {
      "main": [
        [
          {
            "node": "Loop Over Items7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call AI Leads": {
      "main": [
        [
          {
            "node": "Filter7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Phone1": {
      "main": [
        [
          {
            "node": "Save to Google Sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheet1": {
      "main": [
        [
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google Maps (SerpAPI)1": {
      "main": [
        [
          {
            "node": "Extract Results1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Results1": {
      "main": [
        [
          {
            "node": "Format Phone1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items8": {
      "main": [
        [],
        [
          {
            "node": "Search Google Maps (SerpAPI)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "Loop Over Items8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window8": {
      "main": [
        [
          {
            "node": "Vapi Call1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call1": {
      "main": [
        [
          {
            "node": "Update Lead8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Jetski Scraping": {
      "main": [
        [
          {
            "node": "Check Timezone Window8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter8": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Loop Over Items9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items9": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call17": {
      "main": [
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "Loop Over Items9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Set Keywords Jetski",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Jetski": {
      "main": [
        [
          {
            "node": "Filter8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules8": {
      "main": [
        [
          {
            "node": "Check Timezone Window9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window9": {
      "main": [
        [
          {
            "node": "Vapi Call18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call18": {
      "main": [
        [
          {
            "node": "Update Lead9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter9": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Loop Over Items10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items10": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call19": {
      "main": [
        [
          {
            "node": "Wait10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait10": {
      "main": [
        [
          {
            "node": "Loop Over Items10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Keywords Jetski": {
      "main": [
        [
          {
            "node": "Loop Over Items8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Phone": {
      "main": [
        [
          {
            "node": "Save to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheet": {
      "main": [
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google Maps (SerpAPI)": {
      "main": [
        [
          {
            "node": "Extract Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Results": {
      "main": [
        [
          {
            "node": "Format Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items11": {
      "main": [
        [],
        [
          {
            "node": "Search Google Maps (SerpAPI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "Loop Over Items11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Set Keywords Medical Clinics (Maps)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules9": {
      "main": [
        [
          {
            "node": "Check Timezone Window10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window10": {
      "main": [
        [
          {
            "node": "Vapi Call20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call20": {
      "main": [
        [
          {
            "node": "Update Lead10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter10": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Loop Over Items12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items12": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call21": {
      "main": [
        [
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "Loop Over Items12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter11": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Loop Over Items13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items13": {
      "main": [
        [],
        [
          {
            "node": "Vapi Call22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call22": {
      "main": [
        [
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "Loop Over Items13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retry Rules10": {
      "main": [
        [
          {
            "node": "Check Timezone Window11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Timezone Window11": {
      "main": [
        [
          {
            "node": "Vapi Call23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call23": {
      "main": [
        [
          {
            "node": "Update Lead11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Phone2": {
      "main": [
        [
          {
            "node": "Save to Google Sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheet2": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google Maps (SerpAPI)2": {
      "main": [
        [
          {
            "node": "Extract Results2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Results2": {
      "main": [
        [
          {
            "node": "Format Phone2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items14": {
      "main": [
        [],
        [
          {
            "node": "Search Google Maps (SerpAPI)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "Loop Over Items14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "Set Keywords RE Companies Dubai (Maps)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Medical Clinics (Google Maps)": {
      "main": [
        [
          {
            "node": "Filter10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call Medical Clinics (Seamless)": {
      "main": [
        [
          {
            "node": "Filter11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Call RE Companies Dubai (Google Maps)": {
      "main": [
        [
          {
            "node": "Filter9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Leads Medical Clinics (Google Maps)": {
      "main": [
        [
          {
            "node": "Filter Retry Rules9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Leads Medical Clinics (Seamless)": {
      "main": [
        [
          {
            "node": "Filter Retry Rules10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Leads RE Companies Dubai (Google Maps)": {
      "main": [
        [
          {
            "node": "Filter Retry Rules8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Keywords Medical Clinics (Maps)": {
      "main": [
        [
          {
            "node": "Loop Over Items11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Keywords RE Companies Dubai (Maps)": {
      "main": [
        [
          {
            "node": "Loop Over Items14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2d262893-39e0-4a57-b096-fd40a32e7779",
  "meta": {
    "instanceId": "3d3e96848556ce43b37eb7d53c56487e27a04da5445c3add2ecb5e1f4d5d98c6"
  },
  "id": "0ml2UNxbSOdHE3qF",
  "tags": []
}
